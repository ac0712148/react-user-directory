{"version":3,"sources":["Header.js","Table.js","App.js","index.js"],"names":["Header","className","id","Table","columns","data","useState","filterInput","setFilterInput","useTable","useFilters","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","console","log","value","onChange","e","target","undefined","placeholder","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","render","row","i","getRowProps","cells","cell","getCellProps","App","setData","useMemo","accessor","useEffect","a","axios","result","results","length","fullname","name","first","last","ReactDOM","document","getElementById"],"mappings":"uPAceA,MAZf,WACI,OACI,4BAAQC,UAAU,iCAAiCC,GAAG,YAClD,yBAAKD,UAAU,aACX,wBAAIA,UAAU,qBAAd,kCACA,wBAAIA,UAAU,iCAAd,kBACA,yBAAKA,UAAU,qB,OCJhB,SAASE,EAAT,GAAiC,IAAjBC,EAAgB,EAAhBA,QAASC,EAAO,EAAPA,KAAO,EAErBC,mBAAS,IAFY,mBACpCC,EADoC,KAEvCC,EAFuC,OAWvCC,mBAAS,CACTL,UACAC,QACDK,aAAYC,aATXC,EALuC,EAKvCA,cACAC,EANuC,EAMvCA,kBACAC,EAPuC,EAOvCA,aACAC,EARuC,EAQvCA,KACAC,EATuC,EASvCA,WACAC,EAVuC,EAUvCA,UAKJC,QAAQC,IAAIJ,GAQZ,OAAS,iCAAM,2BACXK,MAAOb,EACPc,SARuB,SAAAC,GACvB,IAAMF,EAAQE,EAAEC,OAAOH,YAASI,EAChCP,EAAU,WAAYG,GACtBZ,EAAeY,IAMfnB,UAAU,qDACVwB,YAAa,gBAJR,IAIyB,6BAJzB,IAIiC,yBAAKxB,UAAU,aACrD,yBAAKA,UAAU,2BACX,yCAAOA,UAAU,oCAAuCW,KACpD,+BACKE,EAAaY,KAAI,SAAAC,GAAW,OACzB,sCAAI1B,UAAU,YAAe0B,EAAYC,uBACpCD,EACIE,QACAH,KAAI,SAAAI,GAAM,OACP,wCACQA,EAAOC,eAAeD,EAAOE,wBADrC,CAEI/B,UAAW6B,EAAOG,SAChBH,EAAOI,aACH,YACA,WACJ,KACDJ,EAAOK,OAAO,mBAMvC,0BAAWtB,IACNE,EAAKW,KAAI,SAACU,EAAKC,GAGZ,OAFAnB,QAAQC,IAAIiB,GACZpB,EAAWoB,GAEP,uBAAQA,EAAIE,cACPF,EACIG,MACAb,KAAI,SAAAc,GACD,OAAO,uBAAQA,EAAKC,eAAiBD,EAAKL,OAAO,oBAnC5E,KC4BEO,MAlDf,WAAe,MAGIpC,mBAAS,IAHb,mBAEJD,EAFI,KAGPsC,EAHO,KAKLvC,EAAUwC,mBAAQ,iBAAM,CAC1B,CACI5C,OAAQ,iBACRI,QAAS,CACL,CACIJ,OAAQ,mBACR6C,SAAU,YACX,CACC7C,OAAQ,oBACR6C,SAAU,kBACX,CACC7C,OAAQ,qBACR6C,SAAU,UACX,CACC7C,OAAQ,oBACR6C,SAAU,SACX,CACC7C,OAAQ,oBACR6C,SAAU,cAIvB,IAcH,OAXAC,qBAAU,WACN,sBAAC,8BAAAC,EAAA,sEACwBC,IAAM,yCAD9B,OAEG,IADMC,EADT,OAEYZ,EAAI,EAAGA,EAAIY,EAAO5C,KAAK6C,QAAQC,OAAQd,IAC5CY,EAAO5C,KAAK6C,QAAQb,GAAGe,SAAvB,UAAqCH,EAAO5C,KAAK6C,QAAQb,GAAGgB,KAAKC,MAAjE,YAA0EL,EAAO5C,KAAK6C,QAAQb,GAAGgB,KAAKE,MAE1GZ,EAAQM,EAAO5C,KAAK6C,SACpBhC,QAAQC,IAAI8B,EAAO5C,KAAK6C,SAN3B,0CAAD,KAQD,IAGC,yBAAKjD,UAAU,OACX,kBAAC,EAAD,MACA,6BACA,kBAACE,EAAD,CAAOC,QAASA,EAASC,KAAMA,MC7C3CmD,IAASrB,OACL,kBAAC,EAAD,MAAQsB,SAASC,eAAe,W","file":"static/js/main.7e81671d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"w3-container w3-red w3-padding\" id=\"myHeader\">\r\n            <div className=\"w3-center\">\r\n                <h2 className=\"w3-animate-bottom\">Welcome to my First React App!</h2>\r\n                <h1 className=\"w3-xxxlarge w3-animate-bottom\">User Directory</h1>\r\n                <div className=\"w3-padding-32\"></div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","// Table.js\r\nimport React, {useState} from \"react\";\r\nimport {useTable, useFilters, useSortBy} from \"react-table\";\r\n\r\nexport default function Table({columns, data}) {\r\n    const [filterInput,\r\n        setFilterInput] = useState(\"\");\r\n    // Table component logic and UI come here\r\n    const {\r\n        getTableProps, // table props from react-table\r\n        getTableBodyProps, // table body props from react-table\r\n        headerGroups, // headerGroups, if your table has groupings\r\n        rows, // rows for the table based on the data passed\r\n        prepareRow, // Prepare the row (this function needs to be called for each row before getting the row props)\r\n        setFilter\r\n    } = useTable({\r\n        columns,\r\n        data\r\n    }, useFilters, useSortBy);\r\n    console.log(rows)\r\n\r\n    const handleFilterChange = e => {\r\n        const value = e.target.value || undefined;\r\n        setFilter(\"fullname\", value);\r\n        setFilterInput(value);\r\n    };\r\n\r\n    return ( <div> <input\r\n        value={filterInput}\r\n        onChange={handleFilterChange}\r\n        className=\"form-control w3-input w3-animate-input w3-centered\"\r\n        placeholder={\"Search name\"}/> < br /> <div className=\"w3-center\">\r\n        <div className=\"w3-responsive w3-card-4\">\r\n            <table className=\"w3-table w3-bordered w3-centered\" {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr className=\"w3-black\" {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup\r\n                                .headers\r\n                                .map(column => (\r\n                                    <th\r\n                                        {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                        className={column.isSorted\r\n                                        ? column.isSortedDesc\r\n                                            ? \"sort-desc\"\r\n                                            : \"sort-asc\"\r\n                                        : \"\"}>\r\n                                        {column.render(\"Header\")}\r\n                                    </th>\r\n                                ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map((row, i) => {\r\n                        console.log(row)\r\n                        prepareRow(row);\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row\r\n                                    .cells\r\n                                    .map(cell => {\r\n                                        return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\r\n                                    })}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div> </div>\r\n  );\r\n}","import React, {useMemo, useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport Header from \"./Header.js\"\r\nimport Table from \"./Table\";\r\n\r\nfunction App() {\r\n    // data state to store the TV Maze API data. Its initial value is an empty array\r\n    const [data,\r\n        setData] = useState([]);\r\n\r\n    const columns = useMemo(() => [\r\n        {\r\n            Header: \"User Directory\",\r\n            columns: [\r\n                {\r\n                    Header: \"ðŸ‘‰Name\",\r\n                    accessor: \"fullname\"\r\n                }, {\r\n                    Header: \"ðŸ‘‰Login\",\r\n                    accessor: \"login.username\"\r\n                }, {\r\n                    Header: \"ðŸ‘‰Gender\",\r\n                    accessor: \"gender\"\r\n                }, {\r\n                    Header: \"ðŸ‘‰Email\",\r\n                    accessor: \"email\"\r\n                }, {\r\n                    Header: \"ðŸ‘‰Phone\",\r\n                    accessor: \"phone\"\r\n                }\r\n            ]\r\n        }\r\n    ], []);\r\n\r\n    // Using useEffect to call the API once mounted and set the data\r\n    useEffect(() => {\r\n        (async() => {\r\n            const result = await axios(\"https://randomuser.me/api/?results=20\");\r\n            for (let i = 0; i < result.data.results.length; i++) {\r\n                result.data.results[i].fullname = `${result.data.results[i].name.first} ${result.data.results[i].name.last}`\r\n            }\r\n            setData(result.data.results);\r\n            console.log(result.data.results)\r\n        })();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <hr/>\r\n            <Table columns={columns} data={data}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'w3-css/w3.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}